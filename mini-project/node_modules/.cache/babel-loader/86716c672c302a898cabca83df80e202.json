{"ast":null,"code":"var _jsxFileName = \"/Users/kimiaasarroodi/Desktop/miniproject/MiniProject/mini-project/src/components/Log.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrobjs = [];\n\nconst Log = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]);\n  const [time, setTime] = useState([]); //const [update, setUpdate] = useState({});\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('this will run every two secs!');\n      axios.get('https://join.reckon.com/stock-pricing').then(res => {\n        var today = new Date();\n        setTime(today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds());\n        res.data.map(item => arrobjs.push(item));\n        setLogs(arrobjs);\n      }).catch(err => {\n        console.log(err);\n      });\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Last Update: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(logs).map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [logs[item].code, \": $\", logs[item].price, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Log, \"KuonmETt3L30+RIG9lno3WCl6XQ=\");\n\n_c = Log;\nexport default Log; //\n\nvar _c;\n\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"sources":["/Users/kimiaasarroodi/Desktop/miniproject/MiniProject/mini-project/src/components/Log.js"],"names":["React","useState","useEffect","axios","arrobjs","Log","logs","setLogs","time","setTime","interval","setInterval","console","log","get","then","res","today","Date","getHours","getMinutes","getSeconds","data","map","item","push","catch","err","clearInterval","Object","keys","i","code","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,OAAO,GAAG,EAAd;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CAHgB,CAIhB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEAV,MAAAA,KAAK,CAACW,GAAN,CAAU,uCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AAGX,YAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACAT,QAAAA,OAAO,CAACQ,KAAK,CAACE,QAAN,KAAmB,GAAnB,GAAyBF,KAAK,CAACG,UAAN,EAAzB,GAA8C,GAA9C,GAAoDH,KAAK,CAACI,UAAN,EAArD,CAAP;AACAL,QAAAA,GAAG,CAACM,IAAJ,CAASC,GAAT,CAAaC,IAAI,IAAIpB,OAAO,CAACqB,IAAR,CAAaD,IAAb,CAArB;AACAjB,QAAAA,OAAO,CAACH,OAAD,CAAP;AACD,OARH,EASGsB,KATH,CASSC,GAAG,IAAI;AACZf,QAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACD,OAXH;AAYD,KAf2B,EAezB,IAfyB,CAA5B;AAgBA,WAAO,MAAMC,aAAa,CAAClB,QAAD,CAA1B;AACD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE;AAAA,4BACE;AAAA,kCAAkBF,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAEIqB,MAAM,CAACC,IAAP,CAAYxB,IAAZ,EACGiB,GADH,CACO,CAACC,IAAD,EAAOO,CAAP,kBACH;AAAA,+BACE;AAAA,qBAAQzB,IAAI,CAACkB,IAAD,CAAJ,CAAWQ,IAAnB,SAA4B1B,IAAI,CAACkB,IAAD,CAAJ,CAAWS,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASF,CAAT;AAAA;AAAA;AAAA;AAAA,cAFJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAxCD;;GAAM1B,G;;KAAAA,G;AA0CN,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nvar arrobjs = [];\n\n\n\nconst Log = () => {\n\n  const [logs, setLogs] = useState([]);\n  const [time, setTime] = useState([]);\n  //const [update, setUpdate] = useState({});\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('this will run every two secs!');\n\n      axios.get('https://join.reckon.com/stock-pricing')\n        .then(res => {\n\n\n          var today = new Date();\n          setTime(today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds());\n          res.data.map(item => arrobjs.push(item));\n          setLogs(arrobjs);\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      <h3>Last Update: {time}</h3>\n      <ul>\n        {\n          Object.keys(logs)\n            .map((item, i) => (\n              <li key={i}>\n                <span >{logs[item].code}: ${logs[item].price}  </span>\n              </li>))}\n\n      </ul>\n    </div>\n  );\n};\n\nexport default Log\n\n//"]},"metadata":{},"sourceType":"module"}