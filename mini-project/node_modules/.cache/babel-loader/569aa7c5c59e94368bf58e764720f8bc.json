{"ast":null,"code":"var _jsxFileName = \"/Users/kimiaasarroodi/mini-project/src/components/Log.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrobjs = []; // export class PriceTag {\n//   constructor(\n//     public var name: string\n//     public var price: number\n//     ) {\n//   }\n// }\n// export class PRiceList {\n//   constructor(\n//     public list: Array<PriceTag>,\n//     public tiime: Date\n//   ) {\n//   }\n// }\n\nconst Log = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]);\n  const [list, setList] = useState([\"1\", \"2\"]); //const [update, setUpdate] = useState({});\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('this will run every two secs!');\n      axios.get('https://join.reckon.com/stock-pricing').then(res => {\n        var today = new Date(); // res.data.time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n\n        arrobjs.push(res.data);\n        setLogs(res.data); //console.log(arrobjs);\n      }).catch(err => {\n        console.log(err);\n      });\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Log, \"VP6HGsL6EW4lfdEft5J1vhvuB60=\");\n\n_c = Log;\nexport default Log; // \n\nvar _c;\n\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"sources":["/Users/kimiaasarroodi/mini-project/src/components/Log.js"],"names":["React","useState","useEffect","axios","arrobjs","Log","logs","setLogs","list","setList","interval","setInterval","console","log","get","then","res","today","Date","push","data","catch","err","clearInterval","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,OAAO,GAAG,EAAd,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,CAAhC,CAHe,CAIf;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAa,+BAAb;AAEHV,MAAAA,KAAK,CAACW,GAAN,CAAU,uCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AAGX,YAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ,CAHW,CAIX;;AACAd,QAAAA,OAAO,CAACe,IAAR,CAAaH,GAAG,CAACI,IAAjB;AACAb,QAAAA,OAAO,CAACS,GAAG,CAACI,IAAL,CAAP,CANW,CAOX;AACD,OATH,EAUGC,KAVH,CAUSC,GAAG,IAAI;AACZV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,OAZH;AAaC,KAhB4B,EAgB3B,IAhB2B,CAA5B;AAiBD,WAAO,MAAMC,aAAa,CAACb,QAAD,CAA1B;AACD,GAnBS,EAmBR,EAnBQ,CAAT;AAqBD,sBACE;AAAA,2BACE;AAAA,gBACCF,IAAI,CAACgB,GAAL,CAASC,IAAI,iBACV;AAAA,kBAAgBA;AAAhB,SAASA,IAAT;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApCD;;GAAMpB,G;;KAAAA,G;AAsCN,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nvar arrobjs = [];\n\n// export class PriceTag {\n//   constructor(\n//     public var name: string\n//     public var price: number\n//     ) {\n    \n//   }\n// }\n\n// export class PRiceList {\n//   constructor(\n//     public list: Array<PriceTag>,\n//     public tiime: Date\n//   ) {\n\n//   }\n// }\n\n\n\nconst Log = () => {\n  \n   const [logs, setLogs] = useState([]);\n   const [list, setList] = useState([\"1\", \"2\"]);\n   //const [update, setUpdate] = useState({});\n    \n   useEffect(() => {\n     const interval = setInterval(() => {\n       console.log ('this will run every two secs!');\n     \n    axios.get('https://join.reckon.com/stock-pricing')\n      .then(res => {\n        \n        \n        var today = new Date();\n        // res.data.time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        arrobjs.push(res.data);\n        setLogs(res.data);\n        //console.log(arrobjs);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    },2000);\n    return () => clearInterval(interval);\n  },[]);\n\n  return (\n    <div>\n      <ul>\n      {list.map(item => (\n          <li key={item}>{item}</li>\n        ))}\n      </ul>\n      </div>\n  );\n};\n\nexport default Log\n\n// \n\n"]},"metadata":{},"sourceType":"module"}