{"ast":null,"code":"var _jsxFileName = \"/Users/kimiaasarroodi/Desktop/miniproject/MiniProject/mini-project/src/components/Log.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrobjs = [];\nvar temp = {};\n\nconst Log = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]);\n  const [time, setTime] = useState([]);\n  const [isRunning, setIsRunning] = useState(true);\n  const [intervalId, setIntervalId] = useState(null);\n  useEffect(() => {\n    if (isRunning) {\n      const id = window.setInterval(() => {\n        console.log('this will run every two secs!');\n        axios.get('https://join.reckon.com/stock-pricing').then(res => {\n          console.log(res.data);\n          var currentdate = new Date();\n          setTime(\"Updates for \" + currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \"  \" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds());\n          var obj = {\n            \"code\": \"Updates for \" + currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \"  \" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds(),\n            \"price\": \" \"\n          }; //arrobjs.push(obj);\n          // res.data.map(item => arrobjs.push(item));\n\n          arrobjs.push(res.data);\n          console.log(obj);\n          console.log(arrobjs);\n          setLogs(arrobjs);\n          console.log(logs[0]);\n        }).catch(err => {\n          console.log(err);\n        });\n      }, 2000);\n      return () => window.clearInterval(id);\n    }\n  }, [isRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btn\",\n      onClick: () => {\n        setIsRunning(!isRunning);\n\n        if (isRunning === true) {\n          document.getElementById(\"btn\").innerHTML = \"Resume Log\";\n        } else {\n          document.getElementById(\"btn\").innerHTML = \"Pause Log\";\n        }\n      },\n      children: \"Pause Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Log, \"QcUisBLMjAZGHcop6gj/tdlxBFo=\");\n\n_c = Log;\nexport default Log; //\n\nvar _c;\n\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"sources":["/Users/kimiaasarroodi/Desktop/miniproject/MiniProject/mini-project/src/components/Log.js"],"names":["React","useState","useEffect","axios","arrobjs","temp","Log","logs","setLogs","time","setTime","isRunning","setIsRunning","intervalId","setIntervalId","id","window","setInterval","console","log","get","then","res","data","currentdate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","obj","push","catch","err","clearInterval","document","getElementById","innerHTML"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nvar arrobjs = [];\nvar temp ={};\n\n\nconst Log = () => {\n\n  const [logs, setLogs] = useState([]);\n  const [time, setTime] = useState([]);\n  const [isRunning, setIsRunning] = useState(true);\n  const [intervalId, setIntervalId] = useState(null);\n\n  useEffect(() => {\n    if (isRunning) {\n      const id = window.setInterval(() => {\n        console.log('this will run every two secs!');\n        axios.get('https://join.reckon.com/stock-pricing')\n          .then(res => {\n            console.log(res.data);\n            var currentdate = new Date();\n            setTime(\"Updates for \" + currentdate.getDate() + \"/\"\n              + (currentdate.getMonth() + 1) + \"/\"\n              + currentdate.getFullYear() + \"  \"\n              + currentdate.getHours() + \":\"\n              + currentdate.getMinutes() + \":\"\n              + currentdate.getSeconds());\n            var obj = {\n              \"code\": \"Updates for \" + currentdate.getDate() + \"/\"\n                + (currentdate.getMonth() + 1) + \"/\"\n                + currentdate.getFullYear() + \"  \"\n                + currentdate.getHours() + \":\"\n                + currentdate.getMinutes() + \":\"\n                + currentdate.getSeconds(), \"price\": \" \"\n            };\n            //arrobjs.push(obj);\n            // res.data.map(item => arrobjs.push(item));\n            arrobjs.push(res.data);\n            \n            console.log(obj);\n            console.log(arrobjs);\n            setLogs(arrobjs);\n            console.log(logs[0]);\n\n          })\n          .catch(err => {\n            console.log(err)\n          })\n      }, 2000);\n      return () => window.clearInterval(id);\n    }\n  }, [isRunning]);\n\n  return (\n\n    <div className=\"log-box\">\n      <h1>Log</h1>\n      <button id=\"btn\" onClick={() => {\n        setIsRunning(!isRunning);\n        if (isRunning === true) {\n          document.getElementById(\"btn\").innerHTML = \"Resume Log\";\n        }\n        else { document.getElementById(\"btn\").innerHTML = \"Pause Log\"; }\n      }}>Pause Log</button>\n      \n        {/* {  temp = logs[0],\n          // logs.forEach(element  => {\n          temp.map(x  => \n\n            //console.log(x.code);\n        \n           ( \n\n             <p>{x}</p>\n            )\n          )\n          //})\n        } */}\n          \n\n    \n    </div>\n  );\n};\n\nexport default Log\n\n//"]},"metadata":{},"sourceType":"module"}