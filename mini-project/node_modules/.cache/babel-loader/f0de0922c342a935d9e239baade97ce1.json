{"ast":null,"code":"var _jsxFileName = \"/Users/kimiaasarroodi/mini-project/src/components/Log.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrobjs = [];\nvar time = 0;\n\nconst Log = () => {\n  _s();\n\n  const [logs, setLogs] = useState({}); //const [update, setUpdate] = useState({});\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('this will run every two secs!');\n      axios.get('https://join.reckon.com/stock-pricing').then(res => {\n        setLogs(res.data);\n        var today = new Date();\n        logs.time1 = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        console.log(logs.time1);\n        console.log(logs);\n        console.log(logs);\n        arrobjs.push(logs);\n        console.log(arrobjs);\n      }).catch(err => {\n        console.log(err);\n      });\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-box\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(logs).map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [logs[item].code, \": $\", logs[item].price, \" --  \", logs[item].time1, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Log, \"43yDpIIRpUByW1jgz5UTTbDrqq4=\");\n\n_c = Log;\nexport default Log; // \n\nvar _c;\n\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"sources":["/Users/kimiaasarroodi/mini-project/src/components/Log.js"],"names":["React","useState","useEffect","axios","arrobjs","time","Log","logs","setLogs","interval","setInterval","console","log","get","then","res","data","today","Date","time1","getHours","getMinutes","getSeconds","push","catch","err","clearInterval","Object","keys","map","item","i","code","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,OAAO,GAAG,EAAd;AAEA,IAAIC,IAAI,GAAC,CAAT;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAFe,CAGf;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAa,+BAAb;AAEHT,MAAAA,KAAK,CAACU,GAAN,CAAU,uCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AAEXP,QAAAA,OAAO,CAACO,GAAG,CAACC,IAAL,CAAP;AACA,YAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AAEAX,QAAAA,IAAI,CAACY,KAAL,GAAaF,KAAK,CAACG,QAAN,KAAmB,GAAnB,GAAyBH,KAAK,CAACI,UAAN,EAAzB,GAA8C,GAA9C,GAAoDJ,KAAK,CAACK,UAAN,EAAjE;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACY,KAAjB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAaL,IAAb;AAEAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAH,QAAAA,OAAO,CAACmB,IAAR,CAAahB,IAAb;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAGD,OAfH,EAgBGoB,KAhBH,CAgBSC,GAAG,IAAI;AACZd,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACD,OAlBH;AAmBC,KAtB4B,EAsB3B,IAtB2B,CAA5B;AAuBD,WAAO,MAAMC,aAAa,CAACjB,QAAD,CAA1B;AACD,GAzBS,EAyBR,EAzBQ,CAAT;AA2BD,sBACE;AAAK,IAAA,SAAS,EAAE,SAAhB;AAAA,2BACE;AAAA,gBAEGkB,MAAM,CAACC,IAAP,CAAYrB,IAAZ,EAAkBsB,GAAlB,CAAsB,CAACC,IAAD,EAAOC,CAAP,kBACnB;AAAA,+BACA;AAAA,qBAASxB,IAAI,CAACuB,IAAD,CAAJ,CAAWE,IAApB,SAA8BzB,IAAI,CAACuB,IAAD,CAAJ,CAAWG,KAAzC,WAAqD1B,IAAI,CAACuB,IAAD,CAAJ,CAAWX,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,SAAUY,CAAV;AAAA;AAAA;AAAA;AAAA,cADH;AAFH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA/CD;;GAAMzB,G;;KAAAA,G;AAiDN,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nvar arrobjs = [];\n\nvar time=0;\n\nconst Log = () => {\n  \n   const [logs, setLogs] = useState({});\n   //const [update, setUpdate] = useState({});\n    \n   useEffect(() => {\n     const interval = setInterval(() => {\n       console.log ('this will run every two secs!');\n     \n    axios.get('https://join.reckon.com/stock-pricing')\n      .then(res => {\n        \n        setLogs(res.data);\n        var today = new Date();\n\n        logs.time1 = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        console.log(logs.time1);\n        console.log (logs);\n        \n        console.log(logs);\n        arrobjs.push(logs);\n        console.log(arrobjs);\n       \n\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    },5000);\n    return () => clearInterval(interval);\n  },[]);\n\n  return (\n    <div className =\"log-box\">\n      <ul>\n        {\n         Object.keys(logs).map((item, i) => (\n            <li  key={i}>\n            <span >{ logs[item].code }: ${logs[item].price} --  {logs[item].time1} </span>\n              </li> ))\n          \n        \n        }\n\n      </ul>\n    </div>\n  );\n};\n\nexport default Log\n\n// \n\n"]},"metadata":{},"sourceType":"module"}