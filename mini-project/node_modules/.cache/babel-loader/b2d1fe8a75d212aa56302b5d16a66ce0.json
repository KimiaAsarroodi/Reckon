{"ast":null,"code":"var _jsxFileName = \"/Users/kimiaasarroodi/mini-project/src/components/Log.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrobjs = [];\n\nconst Log = () => {\n  _s();\n\n  const [logs, setLogs] = useState({});\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('this will run every two secs!');\n      axios.get('https://join.reckon.com/stock-pricing').then(res => {\n        console.log(res);\n        setLogs(res.data);\n        arrobjs.push(res.data);\n        console.log(arrobjs);\n      }).catch(err => {\n        console.log(err);\n      });\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-box\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: arrobjs.forEach(log => {\n        Object.keys(log).map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [log[item].code, \": $\", log[item].price, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 16\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this));\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Log, \"43yDpIIRpUByW1jgz5UTTbDrqq4=\");\n\n_c = Log;\nexport default Log;\n\nvar _c;\n\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"sources":["/Users/kimiaasarroodi/mini-project/src/components/Log.js"],"names":["React","useState","useEffect","axios","arrobjs","Log","logs","setLogs","interval","setInterval","console","log","get","then","res","data","push","catch","err","clearInterval","forEach","Object","keys","map","item","i","code","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,OAAO,GAAG,EAAd;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAa,+BAAb;AAEHR,MAAAA,KAAK,CAACS,GAAN,CAAU,uCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACXJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAP,QAAAA,OAAO,CAACO,GAAG,CAACC,IAAL,CAAP;AACAX,QAAAA,OAAO,CAACY,IAAR,CAAaF,GAAG,CAACC,IAAjB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AAED,OAPH,EAQGa,KARH,CAQSC,GAAG,IAAI;AACZR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,OAVH;AAWC,KAd4B,EAc3B,KAd2B,CAA5B;AAeD,WAAO,MAAMC,aAAa,CAACX,QAAD,CAA1B;AACD,GAjBS,EAiBR,EAjBQ,CAAT;AAmBD,sBACE;AAAK,IAAA,SAAS,EAAE,SAAhB;AAAA,2BACE;AAAA,gBAEIJ,OAAO,CAACgB,OAAR,CAAgBT,GAAG,IAAI;AAACU,QAAAA,MAAM,CAACC,IAAP,CAAYX,GAAZ,EAAiBY,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,kBACxC;AAAA,iCACA;AAAA,uBAASd,GAAG,CAACa,IAAD,CAAH,CAAUE,IAAnB,SAA6Bf,GAAG,CAACa,IAAD,CAAH,CAAUG,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,WAAUF,CAAV;AAAA;AAAA;AAAA;AAAA,gBADmB;AAGR,OAHhB;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtCD;;GAAMpB,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nvar arrobjs = [];\nconst Log = () => {\n  \n   const [logs, setLogs] = useState({});\n    \n   useEffect(() => {\n     const interval = setInterval(() => {\n       console.log ('this will run every two secs!');\n     \n    axios.get('https://join.reckon.com/stock-pricing')\n      .then(res => {\n        console.log(res)\n        setLogs(res.data)\n        arrobjs.push(res.data);\n        console.log(arrobjs);\n\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    },10000);\n    return () => clearInterval(interval);\n  },[]);\n\n  return (\n    <div className =\"log-box\">\n      <ul>\n        {\n          arrobjs.forEach(log => {Object.keys(log).map((item, i) => (\n               <li  key={i}>\n               <span >{ log[item].code }: ${log[item].price} </span>\n                 </li> ))}\n          )\n        \n          }\n\n      </ul>\n    </div>\n  );\n};\n\nexport default Log\n\n\n\n"]},"metadata":{},"sourceType":"module"}