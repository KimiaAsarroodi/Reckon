{"ast":null,"code":"var _jsxFileName = \"/Users/kimiaasarroodi/Desktop/miniproject/MiniProject/mini-project/src/components/Log.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrobjs = [];\n\nconst Log = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]);\n  const [time, setTime] = useState([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('this will run every two secs!');\n      axios.get('https://join.reckon.com/stock-pricing').then(res => {\n        var currentdate = new Date();\n        setTime(\"Updates for \" + currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \"  \" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds());\n        res.data.map(item => arrobjs.push(item));\n        setLogs(arrobjs.reverse());\n      }).catch(err => {\n        console.log(err);\n      });\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: Object.keys(logs).map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", logs[item].code, \": $\", logs[item].price, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Log, \"KuonmETt3L30+RIG9lno3WCl6XQ=\");\n\n_c = Log;\nexport default Log; //\n\nvar _c;\n\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"sources":["/Users/kimiaasarroodi/Desktop/miniproject/MiniProject/mini-project/src/components/Log.js"],"names":["React","useState","useEffect","axios","arrobjs","Log","logs","setLogs","time","setTime","interval","setInterval","console","log","get","then","res","currentdate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","data","map","item","push","reverse","catch","err","clearInterval","Object","keys","i","code","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,OAAO,GAAG,EAAd;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACD,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAECC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEAV,MAAAA,KAAK,CAACW,GAAN,CAAU,uCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AAGX,YAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACAT,QAAAA,OAAO,CAAC,iBAAiBQ,WAAW,CAACE,OAAZ,EAAjB,GAAyC,GAAzC,IACLF,WAAW,CAACG,QAAZ,KAAuB,CADlB,IACwB,GADxB,GAENH,WAAW,CAACI,WAAZ,EAFM,GAEsB,IAFtB,GAGNJ,WAAW,CAACK,QAAZ,EAHM,GAGmB,GAHnB,GAINL,WAAW,CAACM,UAAZ,EAJM,GAIqB,GAJrB,GAKNN,WAAW,CAACO,UAAZ,EALK,CAAP;AAMAR,QAAAA,GAAG,CAACS,IAAJ,CAASC,GAAT,CAAaC,IAAI,IAAKvB,OAAO,CAACwB,IAAR,CAAaD,IAAb,CAAtB;AACApB,QAAAA,OAAO,CAACH,OAAO,CAACyB,OAAR,EAAD,CAAP;AACD,OAbH,EAcGC,KAdH,CAcSC,GAAG,IAAI;AACZnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD,OAhBH;AAiBD,KApB2B,EAoBzB,IApByB,CAA5B;AAqBA,WAAO,MAAMC,aAAa,CAACtB,QAAD,CAA1B;AACD,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,sBAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAEIyB,MAAM,CAACC,IAAP,CAAY5B,IAAZ,EACGoB,GADH,CACO,CAACC,IAAD,EAAOQ,CAAP,kBAEH;AAAA,+BAEE;AAAA,0BAAS7B,IAAI,CAACqB,IAAD,CAAJ,CAAWS,IAApB,SAA6B9B,IAAI,CAACqB,IAAD,CAAJ,CAAWU,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,SAASF,CAAT;AAAA;AAAA;AAAA;AAAA,cAHJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAmBD,CAjDD;;GAAM9B,G;;KAAAA,G;AAmDN,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nvar arrobjs = [];\n\n\n\nconst Log = () => {\n\n  const [logs, setLogs] = useState([]);\n const [time, setTime] = useState([]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('this will run every two secs!');\n\n      axios.get('https://join.reckon.com/stock-pricing')\n        .then(res => {\n\n\n          var currentdate = new Date();\n          setTime(\"Updates for \" + currentdate.getDate() + \"/\"\n          + (currentdate.getMonth()+1)  + \"/\" \n          + currentdate.getFullYear() + \"  \"  \n          + currentdate.getHours() + \":\"  \n          + currentdate.getMinutes() + \":\" \n          + currentdate.getSeconds());\n          res.data.map(item =>  arrobjs.push(item));\n          setLogs(arrobjs.reverse());\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    \n    <div className=\"log-box\">\n      <h1>Log</h1>\n      \n      <h4>{time}</h4>\n      <ol>\n        {\n          Object.keys(logs)\n            .map((item, i) => (\n              \n              <li key={i}>\n              \n                <span > {logs[item].code}: ${logs[item].price} </span>\n              </li>))}\n\n      </ol>\n    </div>\n  );\n};\n\nexport default Log\n\n//"]},"metadata":{},"sourceType":"module"}