{"ast":null,"code":"var _jsxFileName = \"/Users/kimiaasarroodi/Desktop/miniproject/MiniProject/mini-project/src/components/Log.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrobjs = [];\n\nconst Log = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]);\n  const [isRunning, setIsRunning] = useState(true);\n  const [intervalId, setIntervalId] = useState(null);\n  useEffect(() => {\n    if (isRunning) {\n      const id = window.setInterval(() => {\n        console.log('this will run every two secs!');\n        axios.get('https://join.reckon.com/stock-pricing').then(res => {\n          console.log(res.data);\n          var currentdate = new Date();\n          var obj = {\n            \"code\": \"Updates for \" + currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \"  \" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds(),\n            \"price\": \"Asarroodi\"\n          };\n          res.data.map(item => arrobjs.push(item));\n          console.log(obj);\n          arrobjs.push(obj);\n          console.log(arrobjs);\n          setLogs(arrobjs.reverse());\n        }).catch(err => {\n          console.log(err);\n        });\n      }, 5000);\n      return () => window.clearInterval(id);\n    }\n  }, [isRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btn\",\n      onClick: () => {\n        setIsRunning(!isRunning);\n\n        if (isRunning === true) {\n          document.getElementById(\"btn\").innerHTML = \"Resume Log\";\n        } else {\n          document.getElementById(\"btn\").innerHTML = \"Pause Log\";\n        }\n      },\n      children: \"Pause Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: Object.keys(logs).map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", logs[item].code, \": $\", logs[item].price, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Log, \"gmMlM0wbSslBfIi6VARw8gkICtI=\");\n\n_c = Log;\nexport default Log; //\n\nvar _c;\n\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"sources":["/Users/kimiaasarroodi/Desktop/miniproject/MiniProject/mini-project/src/components/Log.js"],"names":["React","useState","useEffect","axios","arrobjs","Log","logs","setLogs","isRunning","setIsRunning","intervalId","setIntervalId","id","window","setInterval","console","log","get","then","res","data","currentdate","Date","obj","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","map","item","push","reverse","catch","err","clearInterval","document","getElementById","innerHTML","Object","keys","i","code","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,OAAO,GAAG,EAAd;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGM,SAAH,EAAa;AACb,YAAMI,EAAE,GAAGC,MAAM,CAACC,WAAP,CAAmB,MAAM;AAClCC,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAb,QAAAA,KAAK,CAACc,GAAN,CAAU,uCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACXJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,IAAhB;AACA,cAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,cAAIC,GAAG,GAAG;AAAC,oBAAO,iBAAiBF,WAAW,CAACG,OAAZ,EAAjB,GAAyC,GAAzC,IACfH,WAAW,CAACI,QAAZ,KAAuB,CADR,IACc,GADd,GAEhBJ,WAAW,CAACK,WAAZ,EAFgB,GAEY,IAFZ,GAGhBL,WAAW,CAACM,QAAZ,EAHgB,GAGS,GAHT,GAIhBN,WAAW,CAACO,UAAZ,EAJgB,GAIW,GAJX,GAKhBP,WAAW,CAACQ,UAAZ,EALQ;AAKiB,qBAAQ;AALzB,WAAV;AAMAV,UAAAA,GAAG,CAACC,IAAJ,CAASU,GAAT,CAAaC,IAAI,IAAK3B,OAAO,CAAC4B,IAAR,CAAaD,IAAb,CAAtB;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACAnB,UAAAA,OAAO,CAAC4B,IAAR,CAAaT,GAAb;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACAG,UAAAA,OAAO,CAACH,OAAO,CAAC6B,OAAR,EAAD,CAAP;AACD,SAfH,EAgBGC,KAhBH,CAgBSC,GAAG,IAAI;AACZpB,UAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACD,SAlBH;AAmBD,OArBU,EAqBR,IArBQ,CAAX;AAsBA,aAAO,MAAMtB,MAAM,CAACuB,aAAP,CAAqBxB,EAArB,CAAb;AACD;AACF,GA1BU,EA0BR,CAACJ,SAAD,CA1BQ,CAAT;AA4BA,sBAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,EAAE,EAAC,KAAX;AAAiB,MAAA,OAAO,EAAG,MAAM;AAC/BC,QAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;;AACE,YAAGA,SAAS,KAAK,IAAjB,EAAsB;AACpB6B,UAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,SAA/B,GAA0C,YAA1C;AACD,SAFD,MAGI;AAACF,UAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,SAA/B,GAA0C,WAA1C;AAAuD;AAC5D,OANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAA,gBAEIC,MAAM,CAACC,IAAP,CAAYnC,IAAZ,EACGwB,GADH,CACO,CAACC,IAAD,EAAOW,CAAP,kBAEH;AAAA,+BAEE;AAAA,0BAASpC,IAAI,CAACyB,IAAD,CAAJ,CAAWY,IAApB,SAA6BrC,IAAI,CAACyB,IAAD,CAAJ,CAAWa,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,SAASF,CAAT;AAAA;AAAA;AAAA;AAAA,cAHJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAyBD,CA3DD;;GAAMrC,G;;KAAAA,G;AA6DN,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nvar arrobjs = [];\n\n\n\nconst Log = () => {\n\n  const [logs, setLogs] = useState([]);\n  const [isRunning, setIsRunning] = useState(true);\n  const [intervalId, setIntervalId] = useState(null);\n\n  useEffect(() => {\n    if(isRunning){\n    const id = window.setInterval(() => {\n      console.log('this will run every two secs!');\n      axios.get('https://join.reckon.com/stock-pricing')\n        .then(res => {\n          console.log(res.data);\n          var currentdate = new Date();\n          var obj = {\"code\":\"Updates for \" + currentdate.getDate() + \"/\"\n          + (currentdate.getMonth()+1)  + \"/\" \n          + currentdate.getFullYear() + \"  \"  \n          + currentdate.getHours() + \":\"  \n          + currentdate.getMinutes() + \":\" \n          + currentdate.getSeconds(),\"price\":\"Asarroodi\"};\n          res.data.map(item =>  arrobjs.push(item));\n          console.log(obj);\n          arrobjs.push(obj);\n          console.log(arrobjs);\n          setLogs(arrobjs.reverse());\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }, 5000);\n    return () => window.clearInterval(id);\n  }\n}, [isRunning]);\n\n  return (\n    \n    <div className=\"log-box\">\n      <h1>Log</h1>\n      <button id=\"btn\" onClick ={() => { \n        setIsRunning(!isRunning);\n          if(isRunning === true){\n            document.getElementById(\"btn\").innerHTML =\"Resume Log\";\n          } \n          else{document.getElementById(\"btn\").innerHTML =\"Pause Log\";}\n         }}>Pause Log</button>\n      {/* <h4>{time}</h4> */}\n      <ol>\n        {\n          Object.keys(logs)\n            .map((item, i) => (\n              \n              <li key={i}>\n              \n                <span > {logs[item].code}: ${logs[item].price} </span>\n              </li>))}\n\n      </ol>\n    </div>\n  );\n};\n\nexport default Log\n\n//"]},"metadata":{},"sourceType":"module"}