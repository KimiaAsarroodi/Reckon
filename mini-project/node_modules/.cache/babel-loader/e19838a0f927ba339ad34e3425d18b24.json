{"ast":null,"code":"var _jsxFileName = \"/Users/kimiaasarroodi/mini-project/src/components/Log.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrobjs = []; // export class PriceTag {\n//   constructor(\n//     public var name: string\n//     public var price: number\n//     ) {\n//   }\n// }\n// export class PRiceList {\n//   constructor(\n//     public list: Array<PriceTag>,\n//     public tiime: Date\n//   ) {\n//   }\n// }\n\nconst Log = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]); //const [update, setUpdate] = useState({});\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('this will run every two secs!');\n      axios.get('https://join.reckon.com/stock-pricing').then(res => {\n        var today = new Date();\n        res.data.time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        arrobjs.push(res.data);\n        setLogs(arrobjs); //console.log(arrobjs);\n      }).catch(err => {\n        console.log(err);\n      });\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Last Update: \", logs.time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: logs.forEach(l => {\n        l.forEach(ll => {\n          console.warn(ll);\n\n          /*#__PURE__*/\n          _jsxDEV(\"p\", {\n            children: \"HI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [ll.code, \" : $\", ll.price, \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Log, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n\n_c = Log;\nexport default Log; // \n\nvar _c;\n\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"sources":["/Users/kimiaasarroodi/mini-project/src/components/Log.js"],"names":["React","useState","useEffect","axios","arrobjs","Log","logs","setLogs","interval","setInterval","console","log","get","then","res","today","Date","data","time","getHours","getMinutes","getSeconds","push","catch","err","clearInterval","forEach","l","ll","warn","code","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,OAAO,GAAG,EAAd,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFe,CAGf;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAa,+BAAb;AAEHR,MAAAA,KAAK,CAACS,GAAN,CAAU,uCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AAGX,YAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACAF,QAAAA,GAAG,CAACG,IAAJ,CAASC,IAAT,GAAgBH,KAAK,CAACI,QAAN,KAAmB,GAAnB,GAAyBJ,KAAK,CAACK,UAAN,EAAzB,GAA8C,GAA9C,GAAoDL,KAAK,CAACM,UAAN,EAApE;AACAjB,QAAAA,OAAO,CAACkB,IAAR,CAAaR,GAAG,CAACG,IAAjB;AACAV,QAAAA,OAAO,CAACH,OAAD,CAAP,CANW,CAOX;AACD,OATH,EAUGmB,KAVH,CAUSC,GAAG,IAAI;AACZd,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACD,OAZH;AAaC,KAhB4B,EAgB3B,IAhB2B,CAA5B;AAiBD,WAAO,MAAMC,aAAa,CAACjB,QAAD,CAA1B;AACD,GAnBS,EAmBR,EAnBQ,CAAT;AAqBD,sBACE;AAAK,IAAA,SAAS,EAAE,SAAhB;AAAA,4BACE;AAAA,kCAAkBF,IAAI,CAACY,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAEIZ,IAAI,CAACoB,OAAL,CAAaC,CAAC,IAAI;AAChBA,QAAAA,CAAC,CAACD,OAAF,CAAWE,EAAE,IAAI;AACflB,UAAAA,OAAO,CAACmB,IAAR,CAAaD,EAAb;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA,mCACA;AAAA,yBAAQA,EAAE,CAACE,IAAX,UAAqBF,EAAE,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGD,SAND;AAOD,OARD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA/CD;;GAAM1B,G;;KAAAA,G;AAiDN,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nvar arrobjs = [];\n\n// export class PriceTag {\n//   constructor(\n//     public var name: string\n//     public var price: number\n//     ) {\n    \n//   }\n// }\n\n// export class PRiceList {\n//   constructor(\n//     public list: Array<PriceTag>,\n//     public tiime: Date\n//   ) {\n\n//   }\n// }\n\n\nconst Log = () => {\n  \n   const [logs, setLogs] = useState([]);\n   //const [update, setUpdate] = useState({});\n    \n   useEffect(() => {\n     const interval = setInterval(() => {\n       console.log ('this will run every two secs!');\n     \n    axios.get('https://join.reckon.com/stock-pricing')\n      .then(res => {\n        \n        \n        var today = new Date();\n        res.data.time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        arrobjs.push(res.data);\n        setLogs(arrobjs);\n        //console.log(arrobjs);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    },2000);\n    return () => clearInterval(interval);\n  },[]);\n\n  return (\n    <div className =\"log-box\">\n      <h3>Last Update: {logs.time}</h3>\n      <ul>\n        {\n          logs.forEach(l => {\n            l.forEach( ll => {\n              console.warn(ll);\n              <p>HI</p>;\n              <li>\n              <span >{ll.code} : ${ll.price}  </span>\n                </li>\n            })\n          })\n          \n        \n        }\n\n      </ul>\n    </div>\n  );\n};\n\nexport default Log\n\n// \n\n"]},"metadata":{},"sourceType":"module"}