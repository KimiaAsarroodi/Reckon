{"ast":null,"code":"var _jsxFileName = \"/Users/kimiaasarroodi/Desktop/miniproject/MiniProject/mini-project/src/components/Log.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrobjs = [];\n\nconst Log = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]);\n  const [time, setTime] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    if (isRunning) {\n      windo.setInterval(() => {\n        console.log('this will run every two secs!');\n        axios.get('https://join.reckon.com/stock-pricing').then(res => {\n          var currentdate = new Date();\n          setTime(\"Updates for \" + currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \"  \" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds());\n          res.data.map(item => arrobjs.push(item));\n          setLogs(arrobjs.reverse());\n        }).catch(err => {\n          console.log(err);\n        });\n      }, 1000);\n    }\n  }, [isRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsRunning(true);\n      },\n      children: \"Pause Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: Object.keys(logs).map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", logs[item].code, \": $\", logs[item].price, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Log, \"CRh0aBBQcYfzQkZ6Kk6JyBd3le4=\");\n\n_c = Log;\nexport default Log; //\n\nvar _c;\n\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"sources":["/Users/kimiaasarroodi/Desktop/miniproject/MiniProject/mini-project/src/components/Log.js"],"names":["React","useState","useEffect","axios","arrobjs","Log","logs","setLogs","time","setTime","isRunning","setIsRunning","windo","setInterval","console","log","get","then","res","currentdate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","data","map","item","push","reverse","catch","err","Object","keys","i","code","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,OAAO,GAAG,EAAd;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGQ,SAAH,EAAa;AACbE,MAAAA,KAAK,CAACC,WAAN,CAAkB,MAAM;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAZ,QAAAA,KAAK,CAACa,GAAN,CAAU,uCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACX,cAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACAX,UAAAA,OAAO,CAAC,iBAAiBU,WAAW,CAACE,OAAZ,EAAjB,GAAyC,GAAzC,IACLF,WAAW,CAACG,QAAZ,KAAuB,CADlB,IACwB,GADxB,GAENH,WAAW,CAACI,WAAZ,EAFM,GAEsB,IAFtB,GAGNJ,WAAW,CAACK,QAAZ,EAHM,GAGmB,GAHnB,GAINL,WAAW,CAACM,UAAZ,EAJM,GAIqB,GAJrB,GAKNN,WAAW,CAACO,UAAZ,EALK,CAAP;AAMAR,UAAAA,GAAG,CAACS,IAAJ,CAASC,GAAT,CAAaC,IAAI,IAAKzB,OAAO,CAAC0B,IAAR,CAAaD,IAAb,CAAtB;AACAtB,UAAAA,OAAO,CAACH,OAAO,CAAC2B,OAAR,EAAD,CAAP;AACD,SAXH,EAYGC,KAZH,CAYSC,GAAG,IAAI;AACZnB,UAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD,SAdH;AAeD,OAjBD,EAiBG,IAjBH;AAkBD;AACF,GArBU,EAqBR,CAACvB,SAAD,CArBQ,CAAT;AAuBA,sBAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAG,MAAM;AAACC,QAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAEI0B,MAAM,CAACC,IAAP,CAAY7B,IAAZ,EACGsB,GADH,CACO,CAACC,IAAD,EAAOO,CAAP,kBAEH;AAAA,+BAEE;AAAA,0BAAS9B,IAAI,CAACuB,IAAD,CAAJ,CAAWQ,IAApB,SAA6B/B,IAAI,CAACuB,IAAD,CAAJ,CAAWS,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,SAASF,CAAT;AAAA;AAAA;AAAA;AAAA,cAHJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAmBD,CAhDD;;GAAM/B,G;;KAAAA,G;AAkDN,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nvar arrobjs = [];\n\n\n\nconst Log = () => {\n\n  const [logs, setLogs] = useState([]);\n  const [time, setTime] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n\n  useEffect(() => {\n    if(isRunning){\n    windo.setInterval(() => {\n      console.log('this will run every two secs!');\n      axios.get('https://join.reckon.com/stock-pricing')\n        .then(res => {\n          var currentdate = new Date();\n          setTime(\"Updates for \" + currentdate.getDate() + \"/\"\n          + (currentdate.getMonth()+1)  + \"/\" \n          + currentdate.getFullYear() + \"  \"  \n          + currentdate.getHours() + \":\"  \n          + currentdate.getMinutes() + \":\" \n          + currentdate.getSeconds());\n          res.data.map(item =>  arrobjs.push(item));\n          setLogs(arrobjs.reverse());\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }, 1000);\n  }\n}, [isRunning]);\n\n  return (\n    \n    <div className=\"log-box\">\n      <h1>Log</h1>\n      <button onClick ={() => {setIsRunning(true);}}>Pause Log</button>\n      <h4>{time}</h4>\n      <ol>\n        {\n          Object.keys(logs)\n            .map((item, i) => (\n              \n              <li key={i}>\n              \n                <span > {logs[item].code}: ${logs[item].price} </span>\n              </li>))}\n\n      </ol>\n    </div>\n  );\n};\n\nexport default Log\n\n//"]},"metadata":{},"sourceType":"module"}